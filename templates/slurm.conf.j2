# FGCI slurm.conf
# Example slurm.conf file. Please run configurator.html
# (in doc/html) to build a configuration file customized
# for your environment.
#
#
# slurm.conf file generated by configurator.html.
#
# See the slurm.conf man page for more information.
#
ClusterName={{ slurm_clustername }}
ControlMachine={{ slurm_service_node }}
{% if slurm_control_addr is defined %}
ControlAddr={{ slurm_control_addr }}
{% endif %}
SlurmUser={{ slurm_SlurmUser }}
SlurmctldPort={{ slurm_SlurmctldPort }}
SlurmdPort={{ slurm_SlurmdPort }}
AuthType={{ slurm_AuthType }}
StateSaveLocation={{ slurm_state_dir }}
SwitchType={{ slurm_switch_type }}
MpiDefault={{ slurm_mpi_default }}
MpiParams={{ slurm_mpi_params }}
SlurmctldPidFile={{ slurm_SlurmctldPidFile }}
SlurmdPidFile={{ slurm_SlurmdPidFile }}
ProctrackType={{ slurm_proctrack_type }}
CacheGroups={{ slurm_CacheGroups }}
FirstJobId={{ slurm_first_job_id }}
ReturnToService={{ slurm_return_to_service }}
MaxJobCount={{ slurm_max_job_count }}
MaxArraySize={{ slurm_max_array_size }}
PropagateResourceLimitsExcept={{ slurm_propagate_resource_limits_except }}
EnforcePartLimits={{ slurm_enforce_part_limits }}
{% if slurm_jobsubmitplugins is defined %}
JobSubmitPlugins={{ slurm_jobsubmitplugins }}
{% endif %}
Epilog={{ slurm_Epilog }}
TaskEpilog={{ slurm_TaskEpilog  }}
TaskPlugin={{ slurm_TaskPlugin }}
UsePAM={{ slurm_usepam }}
RebootProgram={{ slurm_RebootProgram }}
HealthCheckInterval={{ slurm_healthcheck_interval }}
HealthCheckProgram={{ slurm_healthcheck_program }}
GresTypes={{ slurm_grestypes }}

{# 
 # Note: The following variables have been commented
 # they'll not be populated by ansible unless you take them out of this block
 # and either set them on your variables' files or uncomment the correspondent 
 # default value on defaults file
 #

BackupController=service02
BackupAddr=service02
JobCredentialPrivateKey={{ slurm_JobCredentialPrivateKey }}
JobCredentialPublicCertificate={{ slurm_JobCredentialPublicCertificate }}
SlurmdSpoolDir={{ slurm_tmp_dir }}
PluginDir={{ slurm_PluginDir }}
PlugStackConfig={{ slurm_PlugStackConfig }}
PropagatePrioProcess=={{ slurm_PropagatePrioProcess }}
PropagateResourceLimits=={{ slurm_PropagateResourceLimits }}
Prolog={{ slurm_Prolog }}
PrologSlurmctld={{ slurm_PrologSlurmctld }}
EpilogSlurmctld={{ slurm_EpilogSlurmctld }}
SrunProlog={{ slurm_SrunProlog }}
SrunEpilog={{ slurm_SrunEpilog }}
TaskProlog={{ slurm_TaskProlog }}
TrackWCKey={{ slurm_TrackWCKey }}
TreeWidth={{ slurm_TreeWidth }}
TmpFs={{ slurm_TmpFs }}
HealthCheckNodeState={{ slurm_HealthCheckNodeState }}

 #
 # End of commented block
 # 
 # }

# TIMERS
SlurmctldTimeout={{ slurm_SlurmctldTimeout }}
SlurmdTimeout={{ slurm_SlurmdTimeout }}
InactiveLimit={{ slurm_InactiveLimit }}
MinJobAge={{ slurm_MinJobAge }}
MessageTimeout={{ slurm_MessageTimeout }}
KillWait={{ slurm_KillWait }}
CompleteWait={{ slurm_CompleteWait }}
Waittime={{ slurm_Waittime }}
KillOnBadExit={{ slurm_KillOnBadExit }}
KeepAliveTime={{ slurm_KeepAliveTime }}
OverTimeLimit={{ slurm_OverTimeLimit }}

# SCHEDULING
SchedulerType={{ slurm_SchedulerType }}
{# SchedulerParameters=bf_max_job_user=30,bf_continue,bf_interval=60,bf_resolution=180,max_job_bf=300,defer_rpc_cnt=10#}
SchedulerParameters={{ slurm_scheduler_parameters }}
{# SchedulerAuth={{ slurm_SchedulerAuth }} #}
SchedulerPort={{ slurm_SchedulerPort }}
{# SchedulerRootFilter={{ slurm_SchedulerRootFilter }} #}
SelectType={{ slurm_select_type }}
SelectTypeParameters={{ slurm_select_type_parameters }}
{# DefMemPerCPU={{ slurm_DefMemPerCPU }} #}
FastSchedule={{ slurm_fast_schedule }}
PriorityType={{ slurm_priority_type }}
{% if slurm_priority_type == "priority/multifactor" %}
PriorityFlags={{ slurm_priority_flags }}
{% endif %}
PriorityDecayHalfLife={{ slurm_priority_decayhalflife }}
PriorityFavorSmall={{ slurm_priority_favorsmall }}
{# PriorityUsageResetPeriod={{ slurm_PriorityUsageResetPeriod }} #}
PriorityWeightFairshare={{Â slurm_priority_weight_fairshare }}
PriorityWeightAge={{ slurm_priority_weight_age }}
PriorityWeightPartition={{ slurm_priority_weight_partition }}
PriorityWeightJobSize={{ slurm_priority_weight_jobsize }}
PriorityWeightQOS={{ slurm_priority_weight_qos }}
PriorityMaxAge={{ slurm_priority_maxage }}
{# Licenses={{ slurm_Licenses }} #}
{# MaxSubmitJobs={{ slurm_MaxSubmitJobs }} #}

# LOGGING
SlurmctldDebug={{ slurm_SlurmctldDebug }}
{# SlurmctldLogFile={{ slurm_SlurmctldLogFile }} #}
SlurmdDebug={{ slurm_SlurmdDebug }}
{# DebugFlags={{ slurm_DebugFlags }} #}
{# SlurmdLogFile={{ slurm_SlurmdLogFile }} #}
JobCompLoc={{ slurm_JobCompLoc }}
JobCompType={{ slurm_JobCompType }}

# ACCOUNTING
JobAcctGatherType={{ slurm_JobAcctGatherType }}
JobAcctGatherFrequency={{ slurm_JobAcctGatherFrequency }}
AcctGatherEnergyType={{ slurm_AcctGatherEnergyType }}
AcctGatherNodeFreq={{ slurm_AcctGatherNodeFreq }}
{# JobAcctGatherFrequency=task={{ slurm_ JobAcctGatherFrequency}} #}
AccountingStorageType={{ slurm_accounting_storage_type }}
AccountingStorageHost={{ slurm_accounting_storage_host }}
AccountingStorageLoc={{ slurm_accounting_storage_loc }}
{# AccountingStoragePass={{ slurm_AccountingStoragePass }} #}
AccountingStorageUser={{ slurm_accounting_storage_user }}
AccountingStorageEnforce={{ slurm_accounting_storage_enforce }}
{% if slurm_accounting_storage_tres is defined %}
AccountingStorageTRES={{ slurm_accounting_storage_tres }}
{% elif slurm_with_gpu %}
AccountingStorageTRES={{ slurm_AccountingStorageTRES }}
{% endif %}

# TOPOLOGY
{% if slurm_topology_plugin is defined %}
TopologyPlugin={{ slurm_topology_plugin }}
{% else %}
#TopologyPlugin=topology/tree
{% endif %}

# COMPUTE NODES
{% if slurm_nodelist is defined %}
{% for nodelist in slurm_nodelist %}
{{ nodelist }}
{% endfor %}
{% else %}
NodeName={{ slurm_compute_nodes }} RealMemory={{ slurm_compute_realmemory }} Sockets={{ slurm_compute_sockets }} CoresPerSocket={{ slurm_compute_corespersocket }} ThreadsPerCore={{ slurm_compute_threadspercore }} State={{ slurm_node_state }}
# If slurm_with_gpu is True then add some nodes and a partition for them.
{% if slurm_with_gpu %}
NodeName={{ slurm_gpu_nodes }} Gres=gpu:teslak80:8 RealMemory=250000 Sockets=2 CoresPerSocket=12 ThreadsPerCore=2 State=UNKNOWN
{% endif %}
{% endif %}

# partitions
{% if slurm_partitionlist is defined %}
{% for partition in slurm_partitionlist %}
{{ partition }}
{% endfor %}
{% else %}
{% if slurm_with_gpu %}
PartitionName=normal Nodes={{ slurm_compute_nodes }},{{ slurm_gpu_nodes }} Default=YES MaxTime={{ slurm_max_job_time }} State=UP DefaultTime={{ slurm_job_def_time }}
{% else %}
PartitionName=normal Nodes={{ slurm_compute_nodes }} Default=YES MaxTime={{ slurm_max_job_time }} State=UP DefaultTime={{ slurm_job_def_time }}
{% endif %}
PartitionName=test Nodes={{ slurm_compute_nodes }} Default=NO MaxTime={{ slurm_max_job_time }} State=UP DefaultTime={{ slurm_job_def_time }}
PartitionName=grid Nodes={{ slurm_compute_nodes }} Default=NO MaxTime={{ slurm_max_job_time }} State=UP DefaultTime={{ slurm_job_def_time }}
{% endif %}
