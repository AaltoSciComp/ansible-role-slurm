---

  - name: get munge key for distribution to nodes
    copy: src=files/munge.key
          dest=/etc/munge/munge.key
          owner=munge
          group=munge
          mode=400
    when: slurm_munge_key_from_nfs == False

  - name: copy the munge key from NFS
    command: cp -v {{ slurm_munge_key_nfs }} /etc/munge/munge.key creates=/etc/munge/munge.key
    when: slurm_munge_key_from_nfs == True

  - name: set permissions on the munge key from NFS
    file: path=/etc/munge/munge.key mode=0400 owner=munge group=munge
    when: slurm_munge_key_from_nfs == True

  - name: start and enable munge
    service: name=munge state=restarted enabled=yes

  - name: Make sure /usr/local/libexec/slurm/epilog.d exists
    file: path=/usr/local/libexec/slurm/epilog.d state=directory owner=root group=root mode=0755 recurse=yes

  - name: Create namespace epilog script
    template: src=namespace_clean.sh.j2 dest=/usr/local/libexec/slurm/epilog.d/namespace_clean.sh owner=root group=root mode=0755

  - name: lineinfile pam_slurm.so to pam-files
    lineinfile: "dest='/etc/pam.d/{{ item }}'
                regexp='^account\t    required\t  pam_slurm.so$'
                line='account\t    required\t  pam_slurm.so'"
    with_items: slurm_pam_files
    when: slurm_manage_pam

  - name: lineinfile pam_access.so to sshd pam-file before the pam_slurm.so
    lineinfile: "dest='/etc/pam.d/sshd'
                regexp='^account\t    sufficient\t  pam_access.so$'
                line='account\t    sufficient\t  pam_access.so'
                insertbefore='^account\t    required\t  pam_slurm.so$'"
    when: slurm_manage_pam

  - name: lineinfile add admin groups to /etc/security/access.conf
    lineinfile: 'dest="/etc/security/access.conf"
                regexp="(^\+\:{{ item }}\:ALL$)"
                line="+:{{ item }}:ALL"'
    register: reg_slurm_access_conf
    with_items: slurm_sshd_access_groups

  - name: lineinfile deny all at the end of /etc/security/access.conf
    lineinfile: 'dest="/etc/security/access.conf"
                regexp="(^\-\:ALL\:ALL$)"
                line="-:ALL:ALL"
                insertafter="EOF"'
    when: reg_slurm_access_conf|success

  - name: start and enable slurm on EL6
    service: name=slurm state=restarted enabled=yes
    when: ansible_distribution_major_version == "6"

  - name: start and enable slurmD on EL7
    service: name=slurmd state=restarted enabled=yes
    when: ansible_distribution_major_version == "7"
